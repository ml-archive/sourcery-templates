{# One file per Form #}

{% for type in types.based.Form|!protocol|annotated:"form" %}
// sourcery:file:Forms/{{ type.localName }}/{{ type.localName }}+Form.generated.swift
import Forms

extension {{ type.localName }} {
    internal var fields: [FieldType] {
        return [
{% for variable in type.variables where variable.typeName|hasPrefix:"FormField<" %}
            {{ variable.name }},
{% endfor %}
        ]
    }
}

internal protocol {{ type.localName }}FieldsType {
{% for variable in type.variables where variable.typeName|hasPrefix:"FormField<" %}
    var {{ variable.name|replace:"Field",""}}: {{variable.typeName.name|replace:"FormField<",""|replace:">",""}}? { get }
{% endfor %}
}

extension {{ type.localName }} {
{% for variable in type.variables where variable.typeName|hasPrefix:"FormField<" %}

    var {{ variable.name|replace:"Field",""}}: {{variable.typeName.name|replace:"FormField<",""|replace:">",""}}? {
        return {{ variable.name }}.value
    }
{% endfor %}
}

// sourcery:end
{% endfor %}
